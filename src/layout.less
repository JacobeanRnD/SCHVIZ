.force-layout {

    .cell {
        .border, .border-inset {
            fill: white;
            fill-opacity: 0.5;
            stroke: steelblue;
            stroke-width: 2px;
            transition: stroke 400ms;
        }

        .border-inset {
            fill: none;
        }

        &.highlight {
            .border, .border-inset {
                stroke: red;
            }
        }
    }

    .cell.parallel-child {
        .border, .border-inset {
            stroke-dasharray: 10,5;
        }
    }

    .cell-isInitial {
        .border, .border-inset {
            stroke-width: 0;
            fill: black;
            fill-opacity: 1;
        }
    }

    .cell-history {
        .border {
            stroke: #888;
            fill: #888;
            fill-opacity: 1;
            rx: 100 !important;
            ry: 100 !important;
        }
    }

    .transition {
        .transitionMask {
            stroke: #fff;
            stroke-width: 5;
            stroke-opacity: .6;
            fill: none;
        }

        .transitionLine {
            stroke: #555;
            stroke-opacity: .6;
            fill: none;
        }

        &.highlight .transitionLine {
            stroke: red;
            stroke-opacity: 1;
            transition: stroke 400ms;
        }
    }

    .transition:hover {
        .transitionLine {
            stroke: black;
            stroke-opacity: 1;
        }
    }


    .arrow {
        stroke-width: 1px;
        fill: #555;
    }


    text {
        text-anchor: middle;
        cursor: default;
    }


    .gravity {
        stroke: green;
    }


    .collision {
        stroke: red;
    }


    .transition-label {
        > g > rect {
            stroke: none;
            fill: none;
            pointer-events: all;
        }
    }


    .action {
        rect {
            fill: #99f;
            fill-opacity: 0.5;
        }
    }


    .force {
        pointer-events: none;
    }


    .zoomRect {
        fill: none;
        stroke-width: 1px;
        pointer-events: all;
    }

    .loadingOverlay {
        rect {
            fill: white;
            opacity: 80%;
        }

        text {
            text-anchor: middle;
        }
    }

}
